---
- name: Check if Docker is already present
  command: which docker
  failed_when: False
  changed_when: False
  register: docker_command_result

- name: Install dependencies and update cache
  apt:
    name: '{{ item }}'
    ##update_cache: yes   ## equivalent of apt-get update
    state: present
  with_items:
    - apt-transport-https
    - ca-certificates

- name: Download Docker install convenience script
  get_url:
    url: https://get.docker.com/
    dest: /tmp/get-docker.sh
    mode: 0775
  when: docker_command_result.rc == 1 and _docker_installation_method == 'convenience'

- name: Run Docker install convenience script.
  command: /tmp/get-docker.sh
  when: docker_command_result.rc == 1 and _docker_installation_method == 'convenience'

- name: Add Docker apt/deb key for Raspberry Pi
  apt_key:
    url: https://download.docker.com/linux/raspbian/gpg
    state: present
  when: _target_distribution == 'rpi' and docker_command_result.rc == 1 and _docker_installation_method == 'convenience'
  ignore_errors: True

- name: Add the Docker apt/deb repository for Raspberry Pi
  apt_repository:
    #repo: 'deb [arch=armhf] https://download.docker.com/linux/raspbian {{ ansible_distribution_release }} stable edge'
    repo: 'deb [arch=armhf] https://download.docker.com/linux/raspbian {{ ansible_distribution_release }} edge'
    state: present
    filename: 'docker-{{ ansible_distribution_release }}'
    update_cache: yes   ## equivalent of apt-get update
  when: _target_distribution == 'rpi' and docker_command_result.rc == 1 and _docker_installation_method == 'deb_repo'

- name: Install Docker for Ubuntu
  apt:
    name: 'docker.io={{ _docker_version }}'
    state: present
    ##allow_unauthenticated: yes
    force: yes
  notify: restart docker
  when: _target_distribution == 'ubuntu' and docker_command_result.rc == 1 and _docker_installation_method == 'deb_repo'

- name: Install Docker for Raspberry Pi
  apt:
    name: 'docker-ce={{ _docker_version }}'
    state: present
    ##allow_unauthenticated: yes
    force: yes
  notify: restart docker
  when: _target_distribution == 'rpi' and docker_command_result.rc == 1 and _docker_installation_method == 'deb_repo'

- name: Ensure Docker users are added to the docker group
  user:
    name: '{{ item }}'
    group: docker
    append: yes
  with_items: '{{ ansible_ssh_user }}'

#- name: Restart Docker systemd services
#  service:
#    name: docker
#    state: restarted

- name: Ensure Docker systemd service is started and enabled at boot
  service:
    name: docker
    state: started
    enabled: yes
