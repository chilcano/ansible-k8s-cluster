- name: Pass bridged IPv4/IPv6 traffic to iptables' chains
  sysctl:
    name: '{{ item }}'
    value: 1
    state: present
    reload: yes
    sysctl_set: yes
  with_items:
    - net.bridge.bridge-nf-call-iptables
    - net.bridge.bridge-nf-call-ip6tables

# curl -sSL "https://github.com/coreos/flannel/blob/master/Documentation/kube-flannel.yml?raw=true" | sed "s/amd64/arm/g" | kubectl apply -f -
- name: Download SDN and CNI plugin (Flannel)
  get_url:
    url: "https://github.com/coreos/flannel/blob/master/Documentation/kube-flannel.yml?raw=true"
    dest: /etc/kube-flannel.yml

- name: Replace all instances of 'amd64' for 'arm' in '/etc/kube-flannel.yml' (Flannel)
  replace:
    path: /etc/kube-flannel.yml
    regexp: 'amd64'
    replace: "arm"

- name: Install SDN and CNI plugin (Flannel)
  shell: >
    kubectl apply -f /etc/kube-flannel.yml
  register: flannel_result
  changed_when: "'created' in flannel_result.stdout"
  run_once: True
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf

#- name: Install SDN and CNI plugin (Flannel)
#  shell: >
#    curl -sSL "https://github.com/coreos/flannel/blob/master/Documentation/kube-flannel.yml?raw=true" |
#    sed "s/amd64/arm/g" |
#    kubectl apply -f -
#  register: flannel_result
#  changed_when: "'created' in flannel_result.stdout"
#  run_once: True
#  environment:
#    KUBECONFIG: /etc/kubernetes/admin.conf

- name: Waiting for getting up the SDN-CNI
  shell: >
    export KUBECONFIG=/etc/kubernetes/admin.conf ;
    kubectl get pods -n kube-system -l name=flannel
  register: result
  until: result.stdout.find("Running") != -1
  retries: 100
  delay: 10
